{
    "(Call other LWC)": {
        "prefix": "call",
        "body": [
            "<c-${1:camel}-${2:case}-${3:name} ${4:atribute}={${5:localVariable}}></c-${6:camel}-${7:case}-${8:name}>",
            "$0"
        ],
        "description": "(Permite atraer y cambiar atributos publicos de otro lwc) los atributos deben ser @api"
    },
    "(Condicional)": {
        "prefix": "if",
        "body": [
            "if:${1|true,false|}={${2:variable}}"
        ],
        "description": "(Permite ocultar o mostrar un elemento del DOM) debe ser incluido como atributo"
    },
    "(Trigger Event)": {
        "prefix": "lwc-onchange",
        "body": [
            "onchange={${1:methodName}}",
            "$0"
        ],
        "description": "Permite disparar un evento en etiquetas </lightning-input>"
    },
    "(ng Repeat)": {
        "prefix": "lwc-repeat",
        "body": [
            "<template for:each={${1:Array}} for:item=\"${2:varPerRecord}\">",
            "   <div key={${3:uniqueKeyPerRecord}}>",
            "   {${4:varPerRecord}.val}",
            "   </div>",
            "</template>",
            "$0"
        ],
        "description": "Permite repetir un arreglo dentro de una plantilla del tipo </template>"
    },
    "(ng If)": {
        "prefix": "lwc-if",
        "body": [
            "if:${1|true,false|}={${2:var}}"
        ],
        "description": "Oculta o no un elemento del DOM con la etiqueta if"
    }
}